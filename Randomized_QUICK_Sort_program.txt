#include<stdio.h>
#include<conio.h>
#include<process.h>
#include<alloc.h>
#include<stdlib.h>
#include<time.h>
intcount=0;
intpartition(int[],int,int);
voidquicksort(int[],int,int);
voidmain()
{
voidgetdata(inta[],intn);
voidputdata(inta[],intn);
intmyrand(int,int);
inta[100],n,i;
clrscr();
printf("enterthesizeofanarray:\n");
scanf("%d",&n);
printf("entertheelementsofarray:\n");
getdata(a,n);
printf("\nbeforesorting");
putdata(a,n);
quicksort(a,1,n);
printf("\naftersorting");
putdata(a,n);
printf("\nforn=%dvalueofcountis%d",n,count);
getch();
}
voidgetdata(inta[],intn)
{
inti;
printf("enterthevalueforsorting");
for(i=1;i<=n;i++)
{
scanf("%d",&a[i]);
}
}
voidputdata(inta[],intn)
{
inti;
for(i=1;i<=n;i++)
{
printf("%d\t",a[i]);
}
printf("\n");
}
voidquicksort(inta[],intp,intr)
{
count++;
if(p<r)
{
intq;
q=partition(a,p,r);
count++;
quicksort(a,p,q-1);
count++;
quicksort(a,q+1,r);
count++;
}
count++;
}
intmyrandom(intlower,intupper)
{
intnum;
srand(time(0));
num=(rand()%(upper-lower+1))+lower;
returnnum;
}
intpartition(inta[],intp,intr)
{
intpivot,y,i,j,temp;
y=myrandom(p,r-1);
temp=a[y];
a[y]=a[r];
a[r]=temp;
pivot=a[r];
i=p-1;
count++;
for(j=p;j<=r-1;j++)
{
count++;
if(a[j]<pivot)
{
count++;
i=i+1;
count++;
temp=a[i];
count++;
a[i]=a[j];
count++;
a[j]=temp;
count++;
}
}
count++;
temp=a[i+1];
count++;
a[i+1]=a[r];
count++;
a[r]=temp;
count++;
return(i+1);
}